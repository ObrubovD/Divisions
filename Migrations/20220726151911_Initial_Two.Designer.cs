// <auto-generated />
using System;
using Divisions.Dal;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Divisions.Migrations
{
    [DbContext(typeof(DivisionDbContext))]
    [Migration("20220726151911_Initial_Two")]
    partial class Initial_Two
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Divisions.Dal.Dbo.DivisionDbo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("ParentDivisionId")
                        .HasColumnType("uuid");

                    b.Property<bool>("Status")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("ParentDivisionId");

                    b.ToTable("Divisions");

                    b.HasCheckConstraint("CK_DivisionDbo_ParentDivisionId", "\"ParentDivisionId\" != \"Id\"");
                });

            modelBuilder.Entity("Divisions.Dal.Dbo.DivisionDbo", b =>
                {
                    b.HasOne("Divisions.Dal.Dbo.DivisionDbo", "ParentDivision")
                        .WithMany()
                        .HasForeignKey("ParentDivisionId");

                    b.Navigation("ParentDivision");
                });
#pragma warning restore 612, 618
        }
    }
}
